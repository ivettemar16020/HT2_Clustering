library(foreign)
dataset16 = read.spss(file.choose(), to.data.frame=TRUE)
dataset17 = read.spss(file.choose(), to.data.frame=TRUE)
View(dataset16)
View(dataset17)
#Para obtener las graficas de codo
data <- (movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year)
#Para obtener las graficas de codo
data <- movies[movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year]
#Load data
movies <- read.csv("tmdb-movies.csv")
setwd("~/UVG/VII Semestre/Data Mining/HT2_Clustering")
#Load data
movies <- read.csv("tmdb-movies.csv")
#Para obtener las graficas de codo
data <- movies[movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year]
#Para obtener las graficas de codo
data <- subset(movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year)
?c
#Para obtener las graficas de codo
data <- c(movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year)
#var <-  (columnas -1 ) * suma(varianza de todas las columnas)
data
library(dplyr)
#Para obtener las graficas de codo
data <- select(movies$popularity, movies$budget, movies$revenue, movies$runtime, movies$vote_count, movies$vote_average, movies$release_year)
#Para obtener las graficas de codo
data <- select(movies, popularity, budget, revenue, runtime, vote_count, vote_average, release_year)
View(dataset16)
View(data)
#Para obtener las graficas de codo
data <- select(movies, popularity, budget, revenue, runtime, vote_count, vote_average, release_year)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Para obtener las graficas de codo
data <- select(movies, popularity, budget, revenue, runtime, vote_count, release_year)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Para obtener las graficas de codo
data <- select(movies, popularity, budget, revenue, runtime, vote_count, release_year)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Otro Metodo
nb <- NbClust(data, distance = "euclidean", min.nc = 2,
max.nc = 10, method = "complete", index ="all")
install.packages(NbClust)
install.packages(NbClust)
library(NbClust) #Para determinar el no de clusters optimos
install.packages(NbClust)
library(cluster)
library(NbClust) #Para determinar el no de clusters optimos
install.packages(NbClust)
devtools::install_github(...)
install.packages(NbClust)
install.packages(NbClust)
